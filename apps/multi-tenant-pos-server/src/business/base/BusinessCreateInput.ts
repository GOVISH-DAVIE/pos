/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { ClientCreateNestedManyWithoutBusinessesInput } from "./ClientCreateNestedManyWithoutBusinessesInput";
import { Type } from "class-transformer";
import { ProductCreateNestedManyWithoutBusinessesInput } from "./ProductCreateNestedManyWithoutBusinessesInput";
import { SaleCreateNestedManyWithoutBusinessesInput } from "./SaleCreateNestedManyWithoutBusinessesInput";

@InputType()
class BusinessCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => ClientCreateNestedManyWithoutBusinessesInput,
  })
  @ValidateNested()
  @Type(() => ClientCreateNestedManyWithoutBusinessesInput)
  @IsOptional()
  @Field(() => ClientCreateNestedManyWithoutBusinessesInput, {
    nullable: true,
  })
  clients?: ClientCreateNestedManyWithoutBusinessesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  owner?: string | null;

  @ApiProperty({
    required: false,
    type: () => ProductCreateNestedManyWithoutBusinessesInput,
  })
  @ValidateNested()
  @Type(() => ProductCreateNestedManyWithoutBusinessesInput)
  @IsOptional()
  @Field(() => ProductCreateNestedManyWithoutBusinessesInput, {
    nullable: true,
  })
  products?: ProductCreateNestedManyWithoutBusinessesInput;

  @ApiProperty({
    required: false,
    type: () => SaleCreateNestedManyWithoutBusinessesInput,
  })
  @ValidateNested()
  @Type(() => SaleCreateNestedManyWithoutBusinessesInput)
  @IsOptional()
  @Field(() => SaleCreateNestedManyWithoutBusinessesInput, {
    nullable: true,
  })
  sales?: SaleCreateNestedManyWithoutBusinessesInput;
}

export { BusinessCreateInput as BusinessCreateInput };
